@model IEnumerable<CRM.Models.VCantidadCotizacionesPorTipo>

@{
    ViewData["Title"] = "Index";
}

<h1>Cantidad de cotizaciones por tipo</h1>

<div class="container">
    <form class="form" method="POST">
        <div>
            <label>Fecha inicio</label>
            <input type="date" id="inicio" name="inicio" />
        </div>
        <div>
            <label>Fecha fin</label>
            <input type="date" id="fin" name="fin" />
        </div>
        <button class="btn btn-success" id="form-btn" asp-controller="VCantidadCotizacionesPorTipo" asp-action="Filtrar">Filtrar</button>
        <button class="btn btn-secondary" id="form-btn" asp-controller="VCantidadCotizacionesPorTipo" asp-action="Index">Quitar filtro</button>
    </form>
</div>

<div id="chart_div"></div>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cantidad)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            <script>
                elements.push(["@item.Nombre", @item.Cantidad]);
            </script>
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cantidad)
            </td>
        </tr>
}
    </tbody>
</table>


@*se indican el titulo, las dimensiones y las columnas que tendrá el grafico*@
<script>
    title = 'Cantidad de cotizaciones por tipo';
    width = 600;
    height = 600;
    columns.push(["string", "Nombre"]);
    columns.push(["number", "Cantidad"]);
    google.charts.setOnLoadCallback(pieChart);//esto es para que se genere el gráfico cuando se ha terminado de cargar la página
</script>